<%init>
	my $id = 'jj-calendar-' . rand;  ## makes a random id that we can refresh later
	my $cal = $c->stash->{calendar};
</%init>
(function(){
	var ns_store = new Ext.data.SimpleStore({ 
	   fields: ['value', 'name'], 
	   data : <% js_dumper( $c->stash->{namespaces} ) %>
	}); 
	var bl_store = new Ext.data.SimpleStore({ 
	   fields: ['value', 'name'], 
	   data : <% js_dumper( $c->stash->{baselines} ) %>
	}); 
	var cal_form = new Ext.FormPanel({
				url: '/job/calendar_update',
				frame: true,
				title: '<% _loc('Calendar Info') %>',
				width: 500,
				height: 300,
				autoHeight: true,
				autoWidth: true,
				defaults: { width: 300 },
				buttons: [
					{  text: '<% _loc('Update') %>',
						handler: function(){ 
							var ff = cal_form.getForm();
							ff.submit({
								success: function(form, action) { Baseliner.message("<% _loc('Calendar') %>", action.result.msg); },
								failure: function(form, action) { Baseliner.message("<% _loc('Failure') %>", action.result.msg); }
							});
						} 
					}
				],
				items: [
					{  xtype: 'hidden', name: 'id_cal', value: '<% $cal->id %>' },
					{  xtype: 'textfield',
						fieldLabel: '<% _loc('Name') %>',
						name: 'name',
						value: '<% $cal->name %>'
					},
					{  xtype: 'textarea',
						fieldLabel: '<% _loc('Description') %>',
						name: 'description',
						value: '<% $cal->description %>'
					},
					{  xtype: 'combo', 
							   name: 'ns', 
							   hiddenName: 'ns',
							   fieldLabel: '<% _loc('Namespace') %>', 
							   mode: 'local', 
							   editable: false,
							   forceSelection: true,
							   triggerAction: 'all',
							   store: ns_store, 
							   valueField: 'value',
							   value: '<% $cal->ns  %>',
							   displayField:'name', 
							   allowBlank: false
					},
					{  xtype: 'combo', 
							   name: 'bl', 
							   hiddenName: 'bl',
							   fieldLabel: '<% _loc('Baseline') %>',
							   mode: 'local', 
							   editable: false,
							   forceSelection: true,
							   triggerAction: 'all',
							   store: bl_store, 
							   valueField: 'value',
							   value: '<% $cal->bl  %>',
							   displayField:'name', 
							   allowBlank: false
					}
				]
	});


    <& /comp/generic/store.mas, fields=>['id','type_name','start_time','end_time','start_date','end_date'], url=>'/job/calendar/date_json'  &>

    <& /comp/search_field.mas &>

	var ps = 30; //page_size
	store.load({params:{start:0 , limit: ps}}); 
		var grid = new Ext.grid.GridPanel({
			title: '<% _loc('Special Dates') %>',
				style: 'margin-top: 20px',
				width: 700,
            stripeRows: true,
			autoScroll: true,
			autoWidth: true,
			store: store,
			viewConfig: [{
					forceFit: true
			}],
			selModel: new Ext.grid.RowSelectionModel({singleSelect:true}),
			loadMask:'true',
			columns: [
				{ header: '<% _loc('Type') %>', width: 100, dataIndex: 'type_name', sortable: true },	
				{ header: '<% _loc('Start Time') %>', width: 200, dataIndex: 'start_time', sortable: true },	
				{ header: '<% _loc('End Time') %>', width: 200, dataIndex: 'end_time', sortable: true },	
				{ header: '<% _loc('Start Date') %>', width: 150, dataIndex: 'start_date', sortable: true },	
				{ header: '<% _loc('End Date') %>', width: 200, dataIndex: 'end_date', sortable: true }	
			],
			autoSizeColumns: true,
			deferredRender:true,
			bbar: new Ext.PagingToolbar({
								store: store,
								pageSize: ps,
								displayInfo: true,
								displayMsg: 'Rows {0} - {1} de {2}',
								emptyMsg: "No hay registros disponibles"
						}),        
			tbar: [ 'Buscar: ', ' ',
				new Ext.app.SearchField({
					store: store,
					params: {start: 0, limit: ps},
					emptyText: '<% _loc('<Enter your search string>') %>'
				}),
				new Ext.Toolbar.Button({
					text: '<% _loc('Add') %>',
					icon:'/static/images/drop-add.gif',
					cls: 'x-btn-text-icon',
					handler: function() {
						//Window
						var ns_store = new Ext.data.SimpleStore({ 
						   fields: ['value', 'name', 'type' ], 
						   data : <% js_dumper( $c->stash->{namespaces} ) %>
						}); 
						var bl_store = new Ext.data.SimpleStore({ 
						   fields: ['value', 'name'], 
						   data : <% js_dumper( $c->stash->{baselines} ) %>
						}); 
						var new_cal = new Ext.FormPanel({
							url: '/job/calendar_update',
							frame: true,
							labelWidth: 150, 
							defaults: { width: 350 },
							buttons: [
								{  text: '<% _loc('OK') %>',
									handler: function(){ 
										var ff = new_cal.getForm();
										ff.submit({
											success: function(form, action) { 
												grid.getStore().load();
												win.close(); 
											},
											failure: function(form, action) { Ext.Msg.alert("<% _loc('Failure') %>", action.result.msg); }
										});
									}
								},
								{  text: '<% _loc('Cancel') %>' , handler: function(){  win.close() } }
							],
							items: [
								{  xtype: 'hidden', name: 'action', value: 'create' },
								{  xtype: 'textfield', name: 'name', fieldLabel: '<% _loc('Calendar Name') %>' }, 
								{  xtype: 'textarea', name: 'description', fieldLabel: '<% _loc('Description') %>' }, 
								{  xtype: 'combo', 
										   name: 'ns', 
										   hiddenName: 'ns',
										   fieldLabel: '<% _loc('Namespace') %>', 
                                           resizable: true,
										   mode: 'local', 
										   editable: false,
										   forceSelection: true,
										   triggerAction: 'all',
										   store: ns_store, 
										   valueField: 'value',
										   value: '/',
										   displayField:'name', 
										   allowBlank: false
								},
								{  xtype: 'combo', 
										   name: 'bl', 
										   hiddenName: 'bl',
										   fieldLabel: '<% _loc('Baseline') %>',
										   mode: 'local', 
										   editable: false,
										   forceSelection: true,
										   triggerAction: 'all',
										   store: bl_store, 
										   valueField: 'value',
										   value: '*',
										   displayField:'name', 
										   allowBlank: false
								}
							]
						});
						var win = new Ext.Window({
							layout: 'fit',
							height: 250, width: 550,
							title: '<% _loc('Create Calendar') %>',
							items: new_cal
						});
						win.show();
					}
				}),
				new Ext.Toolbar.Button({
					text: '<% _loc('Edit') %>',
					icon:'/static/images/drop-yes.gif',
					cls: 'x-btn-text-icon',
					handler: function() {
						var sm = grid.getSelectionModel();
						if (sm.hasSelection())
						{
							var sel = sm.getSelected();
							Baseliner.addNewTabComp('/job/calendar?id_cal=' + sel.data.id , '<% _loc('Calendar') %>');
						} else {
							Ext.Msg.alert('Error', '<% _loc('Select at least one row') %>');	
						};
						
					}
				}),
				new Ext.Toolbar.Button({
					text: '<% _loc('Delete') %>',
					icon:'/static/images/del.gif',
					cls: 'x-btn-text-icon',
					handler: function() {
						var sm = grid.getSelectionModel();
						var sel = sm.getSelected();
						Ext.Msg.confirm('<% _loc('Confirmation') %>', '<% _loc('Are you sure you want to delete the calendar') %>' + ' ' + sel.data.name + '?', 
							function(btn){ 
								if(btn=='yes') {
									var conn = new Ext.data.Connection();
									conn.request({
										url: '/job/calendar_update',
										params: { action: 'delete', id_cal: sel.data.id },
										success: function(resp,opt) { grid.getStore().remove(sel); },
										failure: function(resp,opt) { Ext.Msg.alert('<% _loc('Error') %>', '<% _loc('Could not delete the calendar.') %>'); }
									});	
								}
							} );
					}
				}),
				'->'
				]
		});

	grid.getView().forceFit = true;

	grid.on("rowdblclick", function(grid, rowIndex, e ) {
			var r = grid.getStore().getAt(rowIndex);
			Baseliner.addNewTabComp('/job/calendar?id_cal=' + r.get('id') , '<% _loc('Calendar') %>');
		});		
		

	var panel = new Ext.Panel({
		layout: 'fit',
		style: 'padding: 20px',
		items: [
			cal_form,
			grid,
			{  xtype: 'panel',
				title: '<% _loc('Calendar Windows') %>',
				style: 'margin-top: 20px',
				frame: true,
				width: 700,
				items: [{  xtype: 'panel', id: '<% $id %>', layout: 'fit',
					autoLoad: { url: '/job/calendar_show', params: { panel: '<% $id %>', id_cal: '<% $c->stash->{id_cal} %>' }, scripts: true  }
				}]
			}
		]
	});
	return panel;
})();

