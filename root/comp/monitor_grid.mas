(function(){
	// La fuente de Datos JSON con todos el listado:
	var store=new Ext.data.JsonStore({
		root: 'data' , 
		remoteSort: true,
		totalProperty:"totalCount", 
		id: 'id', 
		url: '/job/monitor_json',
		fields: [ 
			{  name: 'id' },
			{  name: 'name' },
			{  name: 'type' },
			{  name: 'bl' },
			{  name: 'bl_text' },
			{  name: 'starttime' },
			{  name: 'maxstarttime' },
			{  name: 'endtime' },
			{  name: 'runner' },
			{  name: 'username' },
			{  name: 'step' },
			{  name: 'pid' },
			{  name: 'host' },
			{  name: 'owner' },
			{  name: 'comments' },
			{  name: 'status_code' },
			{  name: 'status' }
		]
	});

    <& /comp/search_field.mas &>

    Baseliner.jobRenderer = function(value,metadata,rec,rowIndex,colIndex,store) {
		return '<b>' + value + '</b>';
	};
    Baseliner.levRenderer = function(value,metadata,rec,rowIndex,colIndex,store) {
        var icon;
		var status = rec.data.status_code;
        if( status=='RUNNING' ) icon='log_d.gif';
        else if( status=='FINISHED' ) icon='log_i.gif';
        else if( status=='IN-EDIT' ) icon='log_w.gif';
        else icon='log_e.gif';
        if( icon!=undefined ) {
            return "<img alt='"+status+"' border=0 src='/static/images/"+icon+"' />" + value ;
        } else {
            return value;
        }
    };
	
	// Después de que cargue la página:
		var ps = 50; //page_size
		store.load({params:{start:0 , limit: ps}}); 

		// create the grid
		var grid = new Ext.grid.GridPanel({
			title: '<% _loc('Job Monitor') %>',
			header: false,
            stripeRows: true,
			autoScroll: true,
			autoWidth: true,
			wait: 'loading...',
			store: store,
			viewConfig: [{
					forceFit: true
			}],
			selModel: new Ext.grid.RowSelectionModel({singleSelect:true}),
			loadMask:'true',
			columns: [
				{ header: '<% _loc('Job') %>', width: 100, dataIndex: 'name', sortable: true, renderer: Baseliner.jobRenderer, css: ' background-color: yellow ' },	
				{ header: '<% _loc('Job Status') %>', width: 100, dataIndex: 'status', renderer: Baseliner.levRenderer, sortable: true },
				{ header: '<% _loc('Baseline') %>', width: 50, dataIndex: 'bl', sortable: true },	
				{ header: '<% _loc('Job Type') %>', width: 100, dataIndex: 'type', sortable: true }	,
				{ header: '<% _loc('User') %>', width: 80, dataIndex: 'username', sortable: true },	
				{ header: '<% _loc('Step') %>', width: 80, dataIndex: 'step', sortable: true },	
				{ header: '<% _loc('Start Date') %>', width: 150, dataIndex: 'starttime', sortable: true },	
				{ header: '<% _loc('Max Start Date') %>', width: 150, dataIndex: 'maxstarttime', sortable: true, hidden: true },	
				{ header: '<% _loc('End Date') %>', width: 150, dataIndex: 'endtime', sortable: true },	
				{ header: '<% _loc('PID') %>', width: 50, dataIndex: 'pid', sortable: true, hidden: true },	
				{ header: '<% _loc('Host') %>', width: 120, dataIndex: 'host', sortable: true, hidden: true },	
				{ header: '<% _loc('Owner') %>', width: 120, dataIndex: 'owner', sortable: true, hidden: true },	
				{ header: '<% _loc('Comments') %>', width: 200, dataIndex: 'comments', sortable: true }	
            ],
			autoSizeColumns: true,
			deferredRender:true,
			bbar: new Ext.PagingToolbar({
								store: store,
								pageSize: ps,
								displayInfo: true,
								displayMsg: '<% _loc('Rows {0} - {1} of {2}') %>',
								emptyMsg: "No hay registros disponibles"
						}),        
			tbar: [ 'Buscar: ', ' ',
				new Ext.app.SearchField({
					store: store,
					params: {start: 0, limit: ps},
					emptyText: '<% _loc('<Enter your search string>') %>'
				}),
				new Ext.Toolbar.Button({
					text: '<% _loc('New Job') %>',
					icon:'/static/images/drop-add.gif',
					cls: 'x-btn-text-icon',
					handler: function() {
						Baseliner.addNewTab('/job/create', '<% _loc('New Job') %>');
					}
				}),
				new Ext.Toolbar.Button({
					text: '<% _loc('View Log') %>',
					icon:'/static/images/drop-yes.gif',
					cls: 'x-btn-text-icon',
					handler: function() {
						var sm = grid.getSelectionModel();
						if (sm.hasSelection())
						{
							var sel = sm.getSelected();
                            Baseliner.addNewTabComp('/job/log/list?id_job=' + sel.data.id, '<% _loc('Log') %>'+ ' ' + sel.data.name );
						} else {
							Ext.Msg.alert('Error', 'Hay que seleccionar una fila.');	
						};
					}
				}),
				new Ext.Toolbar.Button({
					text: '<% _loc('Cancel Job') %>',
					icon:'/static/images/del.gif',
					cls: 'x-btn-text-icon',
					handler: function() {
						var sm = grid.getSelectionModel();
						var sel = sm.getSelected();
                        if( sel.data.status_code == 'RUNNING' ) {
                            msg = '<% _loc('Killing the job will interrupt current local processing but no remote processes') %>';
                            msg += "\n" + '<% _loc('Are you sure you want to kill the job') %> ';
                        } else if( sel.data.status_code == 'CANCELLED' ) {
                            msg = '<% _loc('Are you sure you want to delete the job') %> ';
                        } else {
                            msg = '<% _loc('Are you sure you want to cancel the job') %> ';
                        }
						Ext.Msg.confirm('<% _loc('Confirmation') %>',  msg + sel.data.name + '?', 
							function(btn){ 
								if(btn=='yes') {
									var conn = new Ext.data.Connection();
									conn.request({
										url: '/job/submit',
										params: { action: 'delete', id_job: sel.data.id },
										success: function(resp,opt) { grid.getStore().reload(); },
										failure: function(resp,opt) { Ext.Msg.alert('<% _loc('Error') %>', '<% _loc('Could not delete the job.') %>'); }
									});	
								}
							} );
					}
				}),
				new Ext.Toolbar.Button({
					text: '<% _loc('Rerun') %>',
					icon:'/static/images/icons/asterisk_orange.png',
					cls: 'x-btn-text-icon',
					handler: function() {
						var sm = grid.getSelectionModel();
						if ( ! sm.hasSelection()) {
							Ext.Msg.alert('<% _loc('Error') %>', '<% _loc('Select a row first') %>');	
                        } else {
                            var sel = sm.getSelected();
                            Ext.Msg.confirm('<% _loc('Confirmation') %>', '<% _loc('Are you sure you want to rerun the job') %> ' + sel.data.name + '?', 
                                function(btn){ 
                                    if(btn=='yes') {
                                        var conn = new Ext.data.Connection();
                                        conn.request({
                                            url: '/job/submit',
                                            params: { action: 'rerun', id_job: sel.data.id },
                                            success: function(resp,opt) {
                                                Baseliner.message( sel.data.name, '<% _loc('Job Restarted') %>');
                                                store.load();
                                            },
                                            failure: function(resp,opt) { Baseliner.message('<% _loc('Error') %>', '<% _loc('Could not rerun the job.') %>'); }
                                        });	
                                    }
                                } );
                        }
					}
				}),
				'->'
				]
		});

	   grid.getView().forceFit = true;

       grid.getView().getRowClass = function(rec, index){
			var css = index % 2 > 0 ? 'level-row info-odd' : 'level-row info-even' ;
            return css;
        }; 

		grid.on("rowdblclick", function(grid, rowIndex, e ) {
			var r = grid.getStore().getAt(rowIndex);
			Baseliner.addNewTabComp('/job/log/list?id_job=' + r.get('id') , '<% _loc('Log') %>' + ' ' + r.get('name') );
		});		


        grid.on("activate", function(){
            grid.setTitle("<% _loc('Monitor') %>");
        });

	return grid;
})();

